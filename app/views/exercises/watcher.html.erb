<!DOCTYPE html>
<html>
  <head>
    <title>Range Watcher</title>
    <style>
      #app {
        border: dashed black 1px;
        display: inline-block;
        padding: 10px;
      }
      #app > p {
        font-size: large;
        font-weight: bold;
        text-align: center;
      }

        #app2 {
      border: dashed black 1px;
      display: inline-block;
      padding: 10px;
          }
          #app2 > div {
      width: 200px;
      height: 50px;
      border: solid black 1px;
      background-color: lightgreen;
          }
          #app2 > p {
      font-size: large;
      font-weight: bold;
      text-align: center;
          }

       #app3 {
      border: dashed black 1px;
      width: 200px;
      padding: 0 10px 10px 10px;
          }
          #app3 > div {
      width: 200px;
      height: 50px;
      border: solid black 1px;
      background-color: lightgreen;
          }
          #app3 > p {
      font-size: large;
      font-weight: bold;
          }
          .valid {
      color: green;
          }
          .invalid {
      color: red;
          }
    </style>
  </head>
  <body>
    <h1>Example: Range Watcher</h1>
    <p>A watcher is used for the 'rangeVal' value so that values between 20 and 60 are not possible to choose.</p>
    <div id="app">
      <input type="range" min="0" max="100" step="1" v-model="rangeVal">
      <p><code>{{ rangeVal }}</code></p>
    </div>
    <script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>
    <script>
      const app = Vue.createApp({
        data() {
          return {
            rangeVal: 70
          }
        },
        watch: {
          rangeVal(val) {
            if( val>20 && val<60 ){
              if(val<40){
                this.rangeVal = 20;
              }
              else{
                this.rangeVal = 60;
              }
            }
          }
        }
      })
       app.mount('#app')
    </script>
    <h1>Example: Mouse Pointer Position Change</h1>
    <p>To see the difference in mouse pointer position from one click event to the next we can subtract the old x-position from the new x-position.</p>
    <div id="app2">
      <div v-on:click="updatePos"></div>
      <p><code>{{ xDiff }}</code></p>
    </div>
    <script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>
    <script>
      const app2 = Vue.createApp({
        data() {
          return {
            xPos: 0,
            xDiff: 0
          }
        },
        watch: {
          xPos(newVal,oldVal) {
            this.xDiff = newVal-oldVal
          }
        },
        methods: {
          updatePos(evt) {
            this.xPos = evt.offsetX
          }
        }
      })
       app2.mount('#app2')
    </script>
    <div id="app3">
      <label>
        <p>Type a valid e-mail address:</p>
        <input type="email" v-model="inpAddress">
      </label>
      <p v-bind:class="myClass"><code>{{ feedbackText }}</code></p>
    </div>
    <script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>
    <script>
      const app3 = Vue.createApp({
        data() {
          return {
            inpAddress: '',
            feedbackText: '',
            myClass: 'invalid'
          }
        },
        watch: {
          inpAddress(newVal,oldVal) {
            if(!newVal.includes('@')){
              this.feedbackText = 'The e-mail address is NOT valid';
              this.myClass = 'invalid';
            }
            else if(!oldVal.includes('@') && newVal.includes('@')) {
              this.feedbackText = 'Perfect! You fixed it!';
              this.myClass = 'valid'
            }
            else {
              this.feedbackText = 'The e-mail address is valid :)';
            }
          }
        }
      })
       app3.mount('#app3')
    </script>
  </body>
</html>
